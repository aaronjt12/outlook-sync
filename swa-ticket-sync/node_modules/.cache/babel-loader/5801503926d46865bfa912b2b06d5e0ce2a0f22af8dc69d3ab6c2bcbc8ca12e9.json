{"ast":null,"code":"var _jsxFileName = \"/Users/user/outlook-sync/swa-ticket-sync/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider, useMsal, useIsAuthenticated } from \"@azure/msal-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst msalConfig = {\n  auth: {\n    clientId: \"5c1e64c0-76f2-4200-8ee5-b3b3d19b53da\",\n    authority: \"https://login.microsoftonline.com/common\",\n    redirectUri: window.location.origin\n  }\n};\nconst loginRequest = {\n  scopes: [\"openid\", \"profile\", \"User.Read\", \"Mail.Read\", \"Sites.ReadWrite.All\"]\n};\nconst msalInstance = new PublicClientApplication(msalConfig);\nfunction LoginButton() {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const handleLogin = () => {\n    instance.loginPopup(loginRequest);\n  };\n  const handleLogout = () => {\n    instance.logoutPopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login with Microsoft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginButton, \"4mZpb63ym09HJETOgvCZttS+Q/A=\", false, function () {\n  return [useMsal, useIsAuthenticated];\n});\n_c = LoginButton;\nfunction EmailList({\n  token,\n  selectedEmails,\n  setSelectedEmails\n}) {\n  _s2();\n  const [emails, setEmails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (!token) return;\n    setLoading(true);\n    fetch(\"https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages?$top=20\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      setEmails(data.value || []);\n      setLoading(false);\n    });\n  }, [token]);\n  const toggleEmail = id => {\n    setSelectedEmails(prev => prev.includes(id) ? prev.filter(eid => eid !== id) : [...prev, id]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading emails...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        maxHeight: 300,\n        overflowY: \"auto\",\n        padding: 0\n      },\n      children: emails.map(email => {\n        var _email$from, _email$from$emailAddr;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            listStyle: \"none\",\n            marginBottom: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedEmails.includes(email.id),\n              onChange: () => toggleEmail(email.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              children: email.subject || \"(No Subject)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), \" \\u2014 \", (_email$from = email.from) === null || _email$from === void 0 ? void 0 : (_email$from$emailAddr = _email$from.emailAddress) === null || _email$from$emailAddr === void 0 ? void 0 : _email$from$emailAddr.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, email.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s2(EmailList, \"BJiVK7xqKYL/SzOSMDVbUeLOvNU=\");\n_c2 = EmailList;\nfunction SharePointSelector({\n  token,\n  siteId,\n  setSiteId,\n  listId,\n  setListId\n}) {\n  _s3();\n  const [sites, setSites] = useState([]);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!token) return;\n    fetch(\"https://graph.microsoft.com/v1.0/sites?search=*\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setSites(data.value || []));\n  }, [token]);\n  useEffect(() => {\n    if (!token || !siteId) return;\n    fetch(`https://graph.microsoft.com/v1.0/sites/${siteId}/lists`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setLists(data.value || []));\n  }, [token, siteId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"SharePoint Site:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: siteId,\n          onChange: e => setSiteId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a site\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), sites.map(site => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: site.id,\n            children: site.displayName\n          }, site.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"SharePoint List:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: listId,\n          onChange: e => setListId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), lists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: list.id,\n            children: list.displayName\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s3(SharePointSelector, \"xHc8PKCitkypb6g9O4Td82MQdsQ=\");\n_c3 = SharePointSelector;\nfunction CreateTicketsButton({\n  token,\n  selectedEmails,\n  emails,\n  siteId,\n  listId,\n  onResult\n}) {\n  _s4();\n  const [loading, setLoading] = useState(false);\n  const handleCreateTickets = async () => {\n    if (!siteId || !listId || selectedEmails.length === 0) {\n      alert(\"Please select emails, a site, and a list.\");\n      return;\n    }\n    setLoading(true);\n    let results = [];\n    for (let emailId of selectedEmails) {\n      var _email$from2, _email$from2$emailAdd;\n      const email = emails.find(e => e.id === emailId);\n      if (!email) continue;\n      // Format ticket number as YYYYMMDDHHmm from receivedDateTime\n      let ticketNumber = \"\";\n      if (email.receivedDateTime) {\n        const dt = new Date(email.receivedDateTime);\n        const pad = n => n.toString().padStart(2, '0');\n        ticketNumber = `${dt.getFullYear()}${pad(dt.getMonth() + 1)}${pad(dt.getDate())}${pad(dt.getHours())}${pad(dt.getMinutes())}`;\n      }\n      const payload = {\n        fields: {\n          subject: email.subject,\n          description: email.bodyPreview,\n          user: (_email$from2 = email.from) === null || _email$from2 === void 0 ? void 0 : (_email$from2$emailAdd = _email$from2.emailAddress) === null || _email$from2$emailAdd === void 0 ? void 0 : _email$from2$emailAdd.address,\n          ticketNumber // new field\n          // Add more fields as needed\n        }\n      };\n      try {\n        const res = await fetch(`https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${listId}/items`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (res.ok) {\n          results.push({\n            emailId,\n            status: \"success\"\n          });\n        } else {\n          results.push({\n            emailId,\n            status: \"error\",\n            error: await res.text()\n          });\n        }\n      } catch (err) {\n        results.push({\n          emailId,\n          status: \"error\",\n          error: err.message\n        });\n      }\n    }\n    setLoading(false);\n    onResult(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTickets,\n      disabled: loading,\n      children: loading ? \"Creating...\" : \"Create Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s4(CreateTicketsButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c4 = CreateTicketsButton;\nfunction MainApp() {\n  _s5();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const [token, setToken] = useState(null);\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  const [siteId, setSiteId] = useState(\"\");\n  const [listId, setListId] = useState(\"\");\n  const [emails, setEmails] = useState([]);\n  const [results, setResults] = useState([]);\n\n  // Acquire token after login\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    instance.acquireTokenSilent({\n      ...loginRequest,\n      account: accounts[0]\n    }).then(res => setToken(res.accessToken));\n  }, [isAuthenticated, instance, accounts]);\n\n  // Fetch emails for CreateTicketsButton\n  useEffect(() => {\n    if (!token) return;\n    fetch(\"https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages?$top=20\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => setEmails(data.value || []));\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"40px auto\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Outlook to SharePoint Ticket Sync\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), isAuthenticated && token && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SharePointSelector, {\n        token: token,\n        siteId: siteId,\n        setSiteId: setSiteId,\n        listId: listId,\n        setListId: setListId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EmailList, {\n        token: token,\n        selectedEmails: selectedEmails,\n        setSelectedEmails: setSelectedEmails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CreateTicketsButton, {\n        token: token,\n        selectedEmails: selectedEmails,\n        emails: emails,\n        siteId: siteId,\n        listId: listId,\n        onResult: setResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: results.map((r, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Email ID: \", r.emailId, \" \\u2014 \", r.status, r.error && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [\" (\", r.error, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 35\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s5(MainApp, \"F2AMSrlBd9EO0VAutQcmrAdYJjI=\", false, function () {\n  return [useMsal, useIsAuthenticated];\n});\n_c5 = MainApp;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(MsalProvider, {\n    instance: msalInstance,\n    children: /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_c6 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"LoginButton\");\n$RefreshReg$(_c2, \"EmailList\");\n$RefreshReg$(_c3, \"SharePointSelector\");\n$RefreshReg$(_c4, \"CreateTicketsButton\");\n$RefreshReg$(_c5, \"MainApp\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PublicClientApplication","MsalProvider","useMsal","useIsAuthenticated","jsxDEV","_jsxDEV","Fragment","_Fragment","msalConfig","auth","clientId","authority","redirectUri","window","location","origin","loginRequest","scopes","msalInstance","LoginButton","_s","instance","isAuthenticated","handleLogin","loginPopup","handleLogout","logoutPopup","style","marginBottom","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","EmailList","token","selectedEmails","setSelectedEmails","_s2","emails","setEmails","loading","setLoading","fetch","headers","Authorization","then","res","json","data","value","toggleEmail","id","prev","includes","filter","eid","maxHeight","overflowY","padding","map","email","_email$from","_email$from$emailAddr","listStyle","type","checked","onChange","subject","from","emailAddress","address","_c2","SharePointSelector","siteId","setSiteId","listId","setListId","_s3","sites","setSites","lists","setLists","e","target","site","displayName","list","_c3","CreateTicketsButton","onResult","_s4","handleCreateTickets","length","alert","results","emailId","_email$from2","_email$from2$emailAdd","find","ticketNumber","receivedDateTime","dt","Date","pad","n","toString","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","payload","fields","description","bodyPreview","user","method","body","JSON","stringify","ok","push","status","error","text","err","message","disabled","_c4","MainApp","_s5","accounts","setToken","setResults","acquireTokenSilent","account","accessToken","maxWidth","margin","fontFamily","marginTop","r","i","color","_c5","App","_c6","$RefreshReg$"],"sources":["/Users/user/outlook-sync/swa-ticket-sync/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider, useMsal, useIsAuthenticated } from \"@azure/msal-react\";\n\nconst msalConfig = {\n  auth: {\n    clientId: \"5c1e64c0-76f2-4200-8ee5-b3b3d19b53da\",\n    authority: \"https://login.microsoftonline.com/common\",\n    redirectUri: window.location.origin,\n  },\n};\nconst loginRequest = {\n  scopes: [\n    \"openid\",\n    \"profile\",\n    \"User.Read\",\n    \"Mail.Read\",\n    \"Sites.ReadWrite.All\"\n  ],\n};\n\nconst msalInstance = new PublicClientApplication(msalConfig);\n\nfunction LoginButton() {\n  const { instance } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n\n  const handleLogin = () => {\n    instance.loginPopup(loginRequest);\n  };\n\n  const handleLogout = () => {\n    instance.logoutPopup();\n  };\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      {!isAuthenticated ? (\n        <button onClick={handleLogin}>Login with Microsoft</button>\n      ) : (\n        <button onClick={handleLogout}>Logout</button>\n      )}\n    </div>\n  );\n}\n\nfunction EmailList({ token, selectedEmails, setSelectedEmails }) {\n  const [emails, setEmails] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!token) return;\n    setLoading(true);\n    fetch(\"https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages?$top=20\", {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setEmails(data.value || []);\n        setLoading(false);\n      });\n  }, [token]);\n\n  const toggleEmail = (id) => {\n    setSelectedEmails((prev) =>\n      prev.includes(id) ? prev.filter((eid) => eid !== id) : [...prev, id]\n    );\n  };\n\n  return (\n    <div>\n      <h3>Select Emails</h3>\n      {loading && <div>Loading emails...</div>}\n      <ul style={{ maxHeight: 300, overflowY: \"auto\", padding: 0 }}>\n        {emails.map((email) => (\n          <li key={email.id} style={{ listStyle: \"none\", marginBottom: 8 }}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={selectedEmails.includes(email.id)}\n                onChange={() => toggleEmail(email.id)}\n              />\n              <b>{email.subject || \"(No Subject)\"}</b> — {email.from?.emailAddress?.address}\n            </label>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction SharePointSelector({ token, siteId, setSiteId, listId, setListId }) {\n  const [sites, setSites] = useState([]);\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    if (!token) return;\n    fetch(\"https://graph.microsoft.com/v1.0/sites?search=*\", {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((res) => res.json())\n      .then((data) => setSites(data.value || []));\n  }, [token]);\n\n  useEffect(() => {\n    if (!token || !siteId) return;\n    fetch(`https://graph.microsoft.com/v1.0/sites/${siteId}/lists`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((res) => res.json())\n      .then((data) => setLists(data.value || []));\n  }, [token, siteId]);\n\n  return (\n    <div>\n      <div>\n        <label>\n          SharePoint Site:\n          <select value={siteId} onChange={(e) => setSiteId(e.target.value)}>\n            <option value=\"\">Select a site</option>\n            {sites.map((site) => (\n              <option key={site.id} value={site.id}>\n                {site.displayName}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <div>\n        <label>\n          SharePoint List:\n          <select value={listId} onChange={(e) => setListId(e.target.value)}>\n            <option value=\"\">Select a list</option>\n            {lists.map((list) => (\n              <option key={list.id} value={list.id}>\n                {list.displayName}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n    </div>\n  );\n}\n\nfunction CreateTicketsButton({ token, selectedEmails, emails, siteId, listId, onResult }) {\n  const [loading, setLoading] = useState(false);\n\n  const handleCreateTickets = async () => {\n    if (!siteId || !listId || selectedEmails.length === 0) {\n      alert(\"Please select emails, a site, and a list.\");\n      return;\n    }\n    setLoading(true);\n    let results = [];\n    for (let emailId of selectedEmails) {\n      const email = emails.find((e) => e.id === emailId);\n      if (!email) continue;\n      // Format ticket number as YYYYMMDDHHmm from receivedDateTime\n      let ticketNumber = \"\";\n      if (email.receivedDateTime) {\n        const dt = new Date(email.receivedDateTime);\n        const pad = (n) => n.toString().padStart(2, '0');\n        ticketNumber = `${dt.getFullYear()}${pad(dt.getMonth()+1)}${pad(dt.getDate())}${pad(dt.getHours())}${pad(dt.getMinutes())}`;\n      }\n      const payload = {\n        fields: {\n          subject: email.subject,\n          description: email.bodyPreview,\n          user: email.from?.emailAddress?.address,\n          ticketNumber, // new field\n          // Add more fields as needed\n        },\n      };\n      try {\n        const res = await fetch(\n          `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${listId}/items`,\n          {\n            method: \"POST\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(payload),\n          }\n        );\n        if (res.ok) {\n          results.push({ emailId, status: \"success\" });\n        } else {\n          results.push({ emailId, status: \"error\", error: await res.text() });\n        }\n      } catch (err) {\n        results.push({ emailId, status: \"error\", error: err.message });\n      }\n    }\n    setLoading(false);\n    onResult(results);\n  };\n\n  return (\n    <div>\n      <button onClick={handleCreateTickets} disabled={loading}>\n        {loading ? \"Creating...\" : \"Create Tickets\"}\n      </button>\n    </div>\n  );\n}\n\nfunction MainApp() {\n  const { instance, accounts } = useMsal();\n  const isAuthenticated = useIsAuthenticated();\n  const [token, setToken] = useState(null);\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  const [siteId, setSiteId] = useState(\"\");\n  const [listId, setListId] = useState(\"\");\n  const [emails, setEmails] = useState([]);\n  const [results, setResults] = useState([]);\n\n  // Acquire token after login\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    instance\n      .acquireTokenSilent({\n        ...loginRequest,\n        account: accounts[0],\n      })\n      .then((res) => setToken(res.accessToken));\n  }, [isAuthenticated, instance, accounts]);\n\n  // Fetch emails for CreateTicketsButton\n  useEffect(() => {\n    if (!token) return;\n    fetch(\"https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messages?$top=20\", {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((res) => res.json())\n      .then((data) => setEmails(data.value || []));\n  }, [token]);\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"40px auto\", fontFamily: \"sans-serif\" }}>\n      <h2>Outlook to SharePoint Ticket Sync</h2>\n      <LoginButton />\n      {isAuthenticated && token && (\n        <>\n          <SharePointSelector\n            token={token}\n            siteId={siteId}\n            setSiteId={setSiteId}\n            listId={listId}\n            setListId={setListId}\n          />\n          <EmailList\n            token={token}\n            selectedEmails={selectedEmails}\n            setSelectedEmails={setSelectedEmails}\n          />\n          <CreateTicketsButton\n            token={token}\n            selectedEmails={selectedEmails}\n            emails={emails}\n            siteId={siteId}\n            listId={listId}\n            onResult={setResults}\n          />\n          <div style={{ marginTop: 20 }}>\n            {results.length > 0 && (\n              <div>\n                <h4>Results:</h4>\n                <ul>\n                  {results.map((r, i) => (\n                    <li key={i}>\n                      Email ID: {r.emailId} — {r.status}\n                      {r.error && <span style={{ color: \"red\" }}> ({r.error})</span>}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <MsalProvider instance={msalInstance}>\n      <MainApp />\n    </MsalProvider>\n  );\n}"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,qBAAqB;AAC7D,SAASC,YAAY,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9E,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE;IACJC,QAAQ,EAAE,sCAAsC;IAChDC,SAAS,EAAE,0CAA0C;IACrDC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC;EAC/B;AACF,CAAC;AACD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CACN,QAAQ,EACR,SAAS,EACT,WAAW,EACX,WAAW,EACX,qBAAqB;AAEzB,CAAC;AAED,MAAMC,YAAY,GAAG,IAAIlB,uBAAuB,CAACQ,UAAU,CAAC;AAE5D,SAASW,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGnB,OAAO,CAAC,CAAC;EAC9B,MAAMoB,eAAe,GAAGnB,kBAAkB,CAAC,CAAC;EAE5C,MAAMoB,WAAW,GAAGA,CAAA,KAAM;IACxBF,QAAQ,CAACG,UAAU,CAACR,YAAY,CAAC;EACnC,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBJ,QAAQ,CAACK,WAAW,CAAC,CAAC;EACxB,CAAC;EAED,oBACErB,OAAA;IAAKsB,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAC,QAAA,EAC9B,CAACP,eAAe,gBACfjB,OAAA;MAAQyB,OAAO,EAAEP,WAAY;MAAAM,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3D7B,OAAA;MAAQyB,OAAO,EAAEL,YAAa;MAAAI,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAC9C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CArBQD,WAAW;EAAA,QACGjB,OAAO,EACJC,kBAAkB;AAAA;AAAAgC,EAAA,GAFnChB,WAAW;AAuBpB,SAASiB,SAASA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC;AAAkB,CAAC,EAAE;EAAAC,GAAA;EAC/D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,KAAK,EAAE;IACZO,UAAU,CAAC,IAAI,CAAC;IAChBC,KAAK,CAAC,wEAAwE,EAAE;MAC9EC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUV,KAAK;MAAG;IAC9C,CAAC,CAAC,CACCW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdT,SAAS,CAACS,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC;MAC3BR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMgB,WAAW,GAAIC,EAAE,IAAK;IAC1Bf,iBAAiB,CAAEgB,IAAI,IACrBA,IAAI,CAACC,QAAQ,CAACF,EAAE,CAAC,GAAGC,IAAI,CAACE,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,EAAE,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,EAAE,CACrE,CAAC;EACH,CAAC;EAED,oBACEjD,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBS,OAAO,iBAAItC,OAAA;MAAAwB,QAAA,EAAK;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxC7B,OAAA;MAAIsB,KAAK,EAAE;QAAEgC,SAAS,EAAE,GAAG;QAAEC,SAAS,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAE,CAAE;MAAAhC,QAAA,EAC1DY,MAAM,CAACqB,GAAG,CAAEC,KAAK;QAAA,IAAAC,WAAA,EAAAC,qBAAA;QAAA,oBAChB5D,OAAA;UAAmBsB,KAAK,EAAE;YAAEuC,SAAS,EAAE,MAAM;YAAEtC,YAAY,EAAE;UAAE,CAAE;UAAAC,QAAA,eAC/DxB,OAAA;YAAAwB,QAAA,gBACExB,OAAA;cACE8D,IAAI,EAAC,UAAU;cACfC,OAAO,EAAE9B,cAAc,CAACkB,QAAQ,CAACO,KAAK,CAACT,EAAE,CAAE;cAC3Ce,QAAQ,EAAEA,CAAA,KAAMhB,WAAW,CAACU,KAAK,CAACT,EAAE;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,eACF7B,OAAA;cAAAwB,QAAA,EAAIkC,KAAK,CAACO,OAAO,IAAI;YAAc;cAAAvC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,YAAG,GAAA8B,WAAA,GAACD,KAAK,CAACQ,IAAI,cAAAP,WAAA,wBAAAC,qBAAA,GAAVD,WAAA,CAAYQ,YAAY,cAAAP,qBAAA,uBAAxBA,qBAAA,CAA0BQ,OAAO;UAAA;YAAA1C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE;QAAC,GARD6B,KAAK,CAACT,EAAE;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASb,CAAC;MAAA,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACM,GAAA,CA3CQJ,SAAS;AAAAsC,GAAA,GAATtC,SAAS;AA6ClB,SAASuC,kBAAkBA,CAAC;EAAEtC,KAAK;EAAEuC,MAAM;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,GAAA;EAC3E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpF,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqF,KAAK,EAAEC,QAAQ,CAAC,GAAGtF,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,KAAK,EAAE;IACZQ,KAAK,CAAC,iDAAiD,EAAE;MACvDC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUV,KAAK;MAAG;IAC9C,CAAC,CAAC,CACCW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK+B,QAAQ,CAAC/B,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEXtC,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,KAAK,IAAI,CAACuC,MAAM,EAAE;IACvB/B,KAAK,CAAC,0CAA0C+B,MAAM,QAAQ,EAAE;MAC9D9B,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUV,KAAK;MAAG;IAC9C,CAAC,CAAC,CACCW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKiC,QAAQ,CAACjC,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC,CAAC;EAC/C,CAAC,EAAE,CAACf,KAAK,EAAEuC,MAAM,CAAC,CAAC;EAEnB,oBACEvE,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAAwB,QAAA,GAAO,kBAEL,eAAAxB,OAAA;UAAQ+C,KAAK,EAAEwB,MAAO;UAACP,QAAQ,EAAGgB,CAAC,IAAKR,SAAS,CAACQ,CAAC,CAACC,MAAM,CAAClC,KAAK,CAAE;UAAAvB,QAAA,gBAChExB,OAAA;YAAQ+C,KAAK,EAAC,EAAE;YAAAvB,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtC+C,KAAK,CAACnB,GAAG,CAAEyB,IAAI,iBACdlF,OAAA;YAAsB+C,KAAK,EAAEmC,IAAI,CAACjC,EAAG;YAAAzB,QAAA,EAClC0D,IAAI,CAACC;UAAW,GADND,IAAI,CAACjC,EAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN7B,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAAwB,QAAA,GAAO,kBAEL,eAAAxB,OAAA;UAAQ+C,KAAK,EAAE0B,MAAO;UAACT,QAAQ,EAAGgB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACC,MAAM,CAAClC,KAAK,CAAE;UAAAvB,QAAA,gBAChExB,OAAA;YAAQ+C,KAAK,EAAC,EAAE;YAAAvB,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtCiD,KAAK,CAACrB,GAAG,CAAE2B,IAAI,iBACdpF,OAAA;YAAsB+C,KAAK,EAAEqC,IAAI,CAACnC,EAAG;YAAAzB,QAAA,EAClC4D,IAAI,CAACD;UAAW,GADNC,IAAI,CAACnC,EAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC8C,GAAA,CApDQL,kBAAkB;AAAAe,GAAA,GAAlBf,kBAAkB;AAsD3B,SAASgB,mBAAmBA,CAAC;EAAEtD,KAAK;EAAEC,cAAc;EAAEG,MAAM;EAAEmC,MAAM;EAAEE,MAAM;EAAEc;AAAS,CAAC,EAAE;EAAAC,GAAA;EACxF,MAAM,CAAClD,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMgG,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAAClB,MAAM,IAAI,CAACE,MAAM,IAAIxC,cAAc,CAACyD,MAAM,KAAK,CAAC,EAAE;MACrDC,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACF;IACApD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIqD,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,OAAO,IAAI5D,cAAc,EAAE;MAAA,IAAA6D,YAAA,EAAAC,qBAAA;MAClC,MAAMrC,KAAK,GAAGtB,MAAM,CAAC4D,IAAI,CAAEhB,CAAC,IAAKA,CAAC,CAAC/B,EAAE,KAAK4C,OAAO,CAAC;MAClD,IAAI,CAACnC,KAAK,EAAE;MACZ;MACA,IAAIuC,YAAY,GAAG,EAAE;MACrB,IAAIvC,KAAK,CAACwC,gBAAgB,EAAE;QAC1B,MAAMC,EAAE,GAAG,IAAIC,IAAI,CAAC1C,KAAK,CAACwC,gBAAgB,CAAC;QAC3C,MAAMG,GAAG,GAAIC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAChDP,YAAY,GAAG,GAAGE,EAAE,CAACM,WAAW,CAAC,CAAC,GAAGJ,GAAG,CAACF,EAAE,CAACO,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,GAAGL,GAAG,CAACF,EAAE,CAACQ,OAAO,CAAC,CAAC,CAAC,GAAGN,GAAG,CAACF,EAAE,CAACS,QAAQ,CAAC,CAAC,CAAC,GAAGP,GAAG,CAACF,EAAE,CAACU,UAAU,CAAC,CAAC,CAAC,EAAE;MAC7H;MACA,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE;UACN9C,OAAO,EAAEP,KAAK,CAACO,OAAO;UACtB+C,WAAW,EAAEtD,KAAK,CAACuD,WAAW;UAC9BC,IAAI,GAAApB,YAAA,GAAEpC,KAAK,CAACQ,IAAI,cAAA4B,YAAA,wBAAAC,qBAAA,GAAVD,YAAA,CAAY3B,YAAY,cAAA4B,qBAAA,uBAAxBA,qBAAA,CAA0B3B,OAAO;UACvC6B,YAAY,CAAE;UACd;QACF;MACF,CAAC;MACD,IAAI;QACF,MAAMrD,GAAG,GAAG,MAAMJ,KAAK,CACrB,0CAA0C+B,MAAM,UAAUE,MAAM,QAAQ,EACxE;UACE0C,MAAM,EAAE,MAAM;UACd1E,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUV,KAAK,EAAE;YAChC,cAAc,EAAE;UAClB,CAAC;UACDoF,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;QAC9B,CACF,CAAC;QACD,IAAIlE,GAAG,CAAC2E,EAAE,EAAE;UACV3B,OAAO,CAAC4B,IAAI,CAAC;YAAE3B,OAAO;YAAE4B,MAAM,EAAE;UAAU,CAAC,CAAC;QAC9C,CAAC,MAAM;UACL7B,OAAO,CAAC4B,IAAI,CAAC;YAAE3B,OAAO;YAAE4B,MAAM,EAAE,OAAO;YAAEC,KAAK,EAAE,MAAM9E,GAAG,CAAC+E,IAAI,CAAC;UAAE,CAAC,CAAC;QACrE;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZhC,OAAO,CAAC4B,IAAI,CAAC;UAAE3B,OAAO;UAAE4B,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAEE,GAAG,CAACC;QAAQ,CAAC,CAAC;MAChE;IACF;IACAtF,UAAU,CAAC,KAAK,CAAC;IACjBgD,QAAQ,CAACK,OAAO,CAAC;EACnB,CAAC;EAED,oBACE5F,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAQyB,OAAO,EAAEgE,mBAAoB;MAACqC,QAAQ,EAAExF,OAAQ;MAAAd,QAAA,EACrDc,OAAO,GAAG,aAAa,GAAG;IAAgB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC2D,GAAA,CA7DQF,mBAAmB;AAAAyC,GAAA,GAAnBzC,mBAAmB;AA+D5B,SAAS0C,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACjB,MAAM;IAAEjH,QAAQ;IAAEkH;EAAS,CAAC,GAAGrI,OAAO,CAAC,CAAC;EACxC,MAAMoB,eAAe,GAAGnB,kBAAkB,CAAC,CAAC;EAC5C,MAAM,CAACkC,KAAK,EAAEmG,QAAQ,CAAC,GAAG1I,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC8E,MAAM,EAAEC,SAAS,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgF,MAAM,EAAEC,SAAS,CAAC,GAAGjF,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC2C,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmG,OAAO,EAAEwC,UAAU,CAAC,GAAG3I,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,eAAe,EAAE;IACtBD,QAAQ,CACLqH,kBAAkB,CAAC;MAClB,GAAG1H,YAAY;MACf2H,OAAO,EAAEJ,QAAQ,CAAC,CAAC;IACrB,CAAC,CAAC,CACDvF,IAAI,CAAEC,GAAG,IAAKuF,QAAQ,CAACvF,GAAG,CAAC2F,WAAW,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACtH,eAAe,EAAED,QAAQ,EAAEkH,QAAQ,CAAC,CAAC;;EAEzC;EACAxI,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,KAAK,EAAE;IACZQ,KAAK,CAAC,wEAAwE,EAAE;MAC9EC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUV,KAAK;MAAG;IAC9C,CAAC,CAAC,CACCW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKT,SAAS,CAACS,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC,CAAC;EAChD,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBACEhC,OAAA;IAAKsB,KAAK,EAAE;MAAEkH,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,UAAU,EAAE;IAAa,CAAE;IAAAlH,QAAA,gBAC3ExB,OAAA;MAAAwB,QAAA,EAAI;IAAiC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C7B,OAAA,CAACc,WAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACdZ,eAAe,IAAIe,KAAK,iBACvBhC,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA,CAACsE,kBAAkB;QACjBtC,KAAK,EAAEA,KAAM;QACbuC,MAAM,EAAEA,MAAO;QACfC,SAAS,EAAEA,SAAU;QACrBC,MAAM,EAAEA,MAAO;QACfC,SAAS,EAAEA;MAAU;QAAAhD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACF7B,OAAA,CAAC+B,SAAS;QACRC,KAAK,EAAEA,KAAM;QACbC,cAAc,EAAEA,cAAe;QAC/BC,iBAAiB,EAAEA;MAAkB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACF7B,OAAA,CAACsF,mBAAmB;QAClBtD,KAAK,EAAEA,KAAM;QACbC,cAAc,EAAEA,cAAe;QAC/BG,MAAM,EAAEA,MAAO;QACfmC,MAAM,EAAEA,MAAO;QACfE,MAAM,EAAEA,MAAO;QACfc,QAAQ,EAAE6C;MAAW;QAAA1G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACF7B,OAAA;QAAKsB,KAAK,EAAE;UAAEqH,SAAS,EAAE;QAAG,CAAE;QAAAnH,QAAA,EAC3BoE,OAAO,CAACF,MAAM,GAAG,CAAC,iBACjB1F,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB7B,OAAA;YAAAwB,QAAA,EACGoE,OAAO,CAACnC,GAAG,CAAC,CAACmF,CAAC,EAAEC,CAAC,kBAChB7I,OAAA;cAAAwB,QAAA,GAAY,YACA,EAACoH,CAAC,CAAC/C,OAAO,EAAC,UAAG,EAAC+C,CAAC,CAACnB,MAAM,EAChCmB,CAAC,CAAClB,KAAK,iBAAI1H,OAAA;gBAAMsB,KAAK,EAAE;kBAAEwH,KAAK,EAAE;gBAAM,CAAE;gBAAAtH,QAAA,GAAC,IAAE,EAACoH,CAAC,CAAClB,KAAK,EAAC,GAAC;cAAA;gBAAAhG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,GAFvDgH,CAAC;cAAAnH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACoG,GAAA,CA5EQD,OAAO;EAAA,QACiBnI,OAAO,EACdC,kBAAkB;AAAA;AAAAiJ,GAAA,GAFnCf,OAAO;AA8EhB,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,oBACEhJ,OAAA,CAACJ,YAAY;IAACoB,QAAQ,EAAEH,YAAa;IAAAW,QAAA,eACnCxB,OAAA,CAACgI,OAAO;MAAAtG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEnB;AAACoH,GAAA,GANuBD,GAAG;AAAA,IAAAlH,EAAA,EAAAuC,GAAA,EAAAgB,GAAA,EAAA0C,GAAA,EAAAgB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAApH,EAAA;AAAAoH,YAAA,CAAA7E,GAAA;AAAA6E,YAAA,CAAA7D,GAAA;AAAA6D,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}